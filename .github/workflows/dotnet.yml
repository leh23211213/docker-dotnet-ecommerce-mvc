name: Deploy .NET WebApp
on:
  push:
    branches: 
      - main
      - release/*
    paths:
    - '**.cs'
    - '**.csproj'
  pull_request:
    branches: 
      - main
    paths-ignore:
      - README.md
      - .vscode/**
      - .gitignore
env:
  DOTNET_VERSION: '8.0.x'
  
jobs:
  build:
    name: build-${{matrix.os}}
    runs-on: ${{ matrix.os }}
    environment: production
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    
    steps:
      - 
        uses: actions/checkout@v4
      - 
        name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - 
        name: Install/Restore dependencies
        run: dotnet restore ${{ env.ROOT_PATH }}
      - 
        name: Build
        run: dotnet build ${{ env.ROOT_PATH }} --configuration Release --no-restore
        working-directory: ${{env.ROOT_PATH}}
      - 
        name: Test with the dotnet CLI
        run: dotnet test ${{ env.ROOT_PATH }}/src.csproj --logger trx --results-directory "TestResults-${{ matrix.dotnet-version }}"
        working-directory: ${{env.ROOT_PATH}}
      - 
        name: Publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp
        working-directory: ${{ env.ROOT_PATH }}
      -   
        name: Upload dotnet test artifact results
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-results-${{ matrix.dotnet-version }}
          path: TestResults-${{ matrix.dotnet-version }}
          
  docker:
    name: build-${{matrix.os}}
    runs-on: ${{ matrix.os }}
    environment: production
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
    steps:
      - 
        name: Checkout repository
        uses: actions/checkout@v4
      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - 
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./src/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ vars.DOCKER_USERNAME }}/appstore_ecommerce:latest
